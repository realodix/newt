<?php

// PHP-CS-Fixer v2.16
// Based on https://styleci.readme.io/docs/presets#section-laravel
$rules = [
    'array_indentation' => true,
    'array_syntax' => ['syntax' => 'short'], // short_array_syntax
    'binary_operator_spaces' => [ // unalign_equals (default)
        'operators' => [
            '=>' => 'align' // custom
        ]
    ],
    'blank_line_after_namespace' => true,
    'blank_line_after_opening_tag' => true,
    'blank_line_before_statement' => true, // blank_line_before_return
    'braces' => true, // psr2_braces
    'cast_spaces' => true,
    'class_attributes_separation' => true, // method_separation
    'class_definition' => true,
    'compact_nullable_typehint' => true,
    'concat_space' => true, // concat_without_spaces
    'constant_case' => true, // lowercase_constants
    'declare_equal_normalize' => true,
    'elseif' => true,
    'encoding' => true,
    'full_opening_tag' => true,
    'function_declaration' => true,
    'function_typehint_space' => true,
    'heredoc_to_nowdoc' => true,
    'include' => true,
    'increment_style' => ['style' => 'post'], // post_increment
    'indentation_type' => true, // indentation
    'line_ending' => true, // unix_line_endings
    'list_syntax' => ['syntax' => 'short'], // short_list_syntax
    'lowercase_cast' => true,
    'lowercase_keywords' => true,
    'lowercase_static_reference' => true,
    'magic_constant_casing' => true,
    'magic_method_casing' => true,
    'method_argument_space' => true,
    'multiline_whitespace_before_semicolons' => true, // no_multiline_whitespace_before_semicolons
    'native_function_casing' => true,
    'native_function_type_declaration_casing' => true,
    'no_alias_functions' => true, // @Symfony:risky, @PhpCsFixer:risky
    'no_blank_lines_after_class_opening' => true,
    'no_blank_lines_after_phpdoc' => true,
    'no_closing_tag' => true,
    'no_empty_phpdoc' => true,
    'no_empty_statement' => true,
    'no_extra_blank_lines' => [
        'tokens' => [
            'extra',
            'throw', // no_blank_lines_after_throw
            'use', // no_blank_lines_between_imports
            'use_trait' // no_blank_lines_between_traits
        ]
    ],
    'no_extra_consecutive_blank_lines' => true,
    'no_leading_import_slash' => true,
    'no_leading_namespace_whitespace' => true,
    'no_mixed_echo_print' => true, // print_to_echo
    'no_multiline_whitespace_around_double_arrow' => true,
    'no_short_bool_cast' => true,
    'no_singleline_whitespace_before_semicolons' => true,
    'no_spaces_after_function_name' => true,
    'no_spaces_around_offset' => ['positions' => ['inside']], // no_spaces_inside_offset
    'no_spaces_inside_parenthesis' => true,
    'no_trailing_comma_in_list_call' => true,
    'no_trailing_comma_in_singleline_array' => true,
    'no_trailing_whitespace' => true,
    'no_trailing_whitespace_in_comment' => true,
    'no_unneeded_control_parentheses' => true,
    'no_unneeded_curly_braces' => true,
    'no_unreachable_default_argument_value' => true,
    'no_unused_imports' => true,
    'no_useless_return' => true,
    'no_whitespace_before_comma_in_array' => true,
    'no_whitespace_in_blank_line' => true,
    'normalize_index_brace' => true,
    'not_operator_with_successor_space' => true,
    'object_operator_without_whitespace' => true,
    'ordered_imports' => true, // alpha_ordered_imports
    'phpdoc_align' => [ // align_phpdoc
        'tags' => [
            // 'param',
            'return',
            'throws',
            'type',
            'var'
        ]
    ],
    'phpdoc_indent' => true,
    'phpdoc_inline_tag' => true,
    'phpdoc_no_access' => true,
    'phpdoc_no_alias_tag' => true, // phpdoc_type_to_var
    'phpdoc_no_package' => true,
    'phpdoc_no_useless_inheritdoc' => true,
    'phpdoc_scalar' => true,
    'phpdoc_single_line_var_spacing' => true,
    'phpdoc_summary' => true,
    'phpdoc_trim' => true,
    'phpdoc_types' => true,
    'phpdoc_var_without_name' => true,
    'psr4' => true, // @Symfony:risky, @PhpCsFixer:risky
    'return_type_declaration' => true,
    'self_accessor' => true, // @Symfony:risky, @PhpCsFixer:risky
    'short_scalar_cast' => true,
    'simplified_null_return' => true,
    'single_blank_line_at_eof' => true,
    'single_blank_line_before_namespace' => true,
    'single_class_element_per_statement' => true,
    'single_import_per_statement' => true,
    'single_line_after_imports' => true,
    'single_line_comment_style' => true, // hash_to_slash_comment
    'single_quote' => true,
    'space_after_semicolon' => true,
    'standardize_not_equals' => true,
    'switch_case_semicolon_to_colon' => true,
    'switch_case_space' => true,
    'ternary_operator_spaces' => true,
    'trailing_comma_in_multiline_array' => true,
    'trim_array_spaces' => true,
    'unary_operator_spaces' => true,
    'visibility_required' => true, // property_visibility_required, method_visibility_required
    'whitespace_after_comma_in_array' => true,

    // Custom rules
    'phpdoc_to_comment' => true,
];

$excludes = [
    'bootstrap/cache',
    'config',
    'node_modules',
    'public',
    'storage'
];

$finder = PhpCsFixer\Finder::create()
    ->exclude($excludes)
    ->in(__DIR__)
    ->notName('*.blade.php')
    ->notName('.phpstorm.meta.php')
    ->notName('_ide_*.php');

return PhpCsFixer\Config::create()
    ->setRiskyAllowed(true)
    ->setRules($rules)
    ->setLineEnding("\r\n")
    ->setFinder($finder);
